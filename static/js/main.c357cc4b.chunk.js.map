{"version":3,"sources":["components/buttons/AddButton.jsx","components/Board.jsx","components/buttons/DeleteButton.jsx","components/buttons/LikeButton.jsx","components/buttons/LeftButton.jsx","components/buttons/RightButton.jsx","components/RetroCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddButton","addItem","category","type","className","aria-label","title","onClick","Board","children","icon","faSquare","DeleteButton","deleteItem","index","faTrashAlt","LikeButton","updateLikes","card","faHeart","likes","LeftButton","moveItem","leftCategory","faAngleLeft","RightButton","rightCategory","faAngleRight","RetroCard","props","placeholder","rows","autoFocus","focus","value","item","onChange","e","updateItem","target","onBlur","App","useState","cards","setCards","setFocus","isRow","setIsRow","userInput","newCards","filter","currentIndex","newCategory","push","splice","faBars","rotation","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c357cc4b.chunk.js","sourcesContent":["const AddButton = ({ addItem, category }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"ButtonAdd button button-default\"\n      aria-label=\"Add new card\"\n      title=\"Add new card\"\n      onClick={() => addItem(category)}\n    >\n      +\n    </button>\n  );\n};\n\nexport default AddButton;\n","import AddButton from \"./buttons/AddButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Board = ({ className, category, addItem, children }) => {\n  return (\n    <div className={className}>\n      <h2>\n        <FontAwesomeIcon icon={faSquare} className=\"category-color\" />\n        {category}\n      </h2>\n      <AddButton addItem={addItem} category={category} />\n      {children}\n    </div>\n  );\n};\n\nexport default Board;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DeleteButton = ({ deleteItem, index }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"button button-delete\"\n      title=\"Delete\"\n      onClick={() => deleteItem(index)}\n    >\n      <FontAwesomeIcon icon={faTrashAlt} /> Delete\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst LikeButton = ({ updateLikes, card, index }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"button\"\n      title=\"Like\"\n      onClick={() => {\n        updateLikes(index);\n      }}\n    >\n      <FontAwesomeIcon icon={faHeart} /> {card.likes}\n    </button>\n  );\n};\n\nexport default LikeButton;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst LeftButton = ({ moveItem, leftCategory, index }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"button button-left\"\n      title=\"Move left\"\n      onClick={() => moveItem(leftCategory, index)}\n    >\n      <FontAwesomeIcon icon={faAngleLeft} />\n    </button>\n  );\n};\n\nexport default LeftButton;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst RightButton = ({ moveItem, rightCategory, index }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"button button-right\"\n      title=\"Move right\"\n      onClick={() => moveItem(rightCategory, index)}\n    >\n      <FontAwesomeIcon icon={faAngleRight} />\n    </button>\n  );\n};\n\nexport default RightButton;\n","import DeleteButton from \"./buttons/DeleteButton\";\nimport LikeButton from \"./buttons/LikeButton\";\nimport LeftButton from \"./buttons/LeftButton\";\nimport RightButton from \"./buttons/RightButton\";\n\nconst RetroCard = (props) => {\n  return (\n    <div className=\"RetroCard\" aria-label=\"Retro card\">\n      <textarea\n        className=\"textbox\"\n        placeholder=\"Enter text here\"\n        aria-label=\"Enter text here\"\n        rows=\"1\"\n        autoFocus={props.focus}\n        value={props.card.item}\n        onChange={(e) => props.updateItem(e.target.value, props.index)}\n        onBlur={(e) => {\n          if (e.target.value === \"\") {\n            props.deleteItem(props.index);\n          }\n        }}\n      />\n\n      <div className=\"button-group\">\n        <LeftButton\n          moveItem={props.moveItem}\n          leftCategory={props.leftCategory}\n          index={props.index}\n        />\n        <DeleteButton deleteItem={props.deleteItem} index={props.index} />\n        <LikeButton\n          updateLikes={props.updateLikes}\n          card={props.card}\n          index={props.index}\n        />\n        <RightButton\n          moveItem={props.moveItem}\n          rightCategory={props.rightCategory}\n          index={props.index}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RetroCard;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport Board from \"./components/Board\";\nimport RetroCard from \"./components/RetroCard\";\n\nfunction App() {\n  const [cards, setCards] = useState([\n    {\n      item: \"Add something that was successful!\",\n      likes: 0,\n      category: \"Went Well\",\n    },\n    {\n      item: \"Add something that needs attention.\",\n      likes: 0,\n      category: \"To Improve\",\n    },\n    {\n      item: \"Add something that you're working on.\",\n      likes: 0,\n      category: \"Action Items\",\n    },\n  ]);\n  const [focus, setFocus] = useState(false);\n  const [isRow, setIsRow] = useState(true);\n\n  const addItem = (category) => {\n    setCards([...cards, { item: \"\", likes: 0, category: category }]);\n    setFocus(true);\n  };\n\n  const updateItem = (userInput, index) => {\n    const newCards = [...cards];\n    newCards[index].item = userInput;\n    setCards(newCards);\n  };\n\n  const updateLikes = (index) => {\n    const newCards = [...cards];\n    newCards[index].likes += 1;\n    setCards(newCards);\n  };\n\n  const deleteItem = (index) => {\n    setCards(cards.filter((card, currentIndex) => currentIndex !== index));\n  };\n\n  const moveItem = (newCategory, index) => {\n    cards[index].category = newCategory;\n    cards.push(cards.splice(index, 1)[0]);\n    setCards([...cards]);\n    setFocus(false);\n  };\n\n  const toggleLayout = () => {\n    setIsRow(!isRow);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"content row\">\n        <h1>Retro Board</h1>\n        <div className=\"toggle-layout\">\n          Layout &nbsp;\n          <button className=\"button button-default\" onClick={toggleLayout}>\n            {isRow ? (\n              <FontAwesomeIcon icon={faBars} />\n            ) : (\n              <FontAwesomeIcon icon={faBars} rotation={90} />\n            )}\n          </button>\n        </div>\n        <div className={`RetroApp ${isRow ? \"row\" : \"column\"}`}>\n          <Board\n            className=\"RetroCategory RetroCategory-1\"\n            category=\"Went Well\"\n            addItem={addItem}\n          >\n            {cards.map((card, index) => {\n              if (card.category === \"Went Well\")\n                return (\n                  <RetroCard\n                    key={`went-well-item-${index}`}\n                    card={card}\n                    index={index}\n                    focus={focus}\n                    updateItem={updateItem}\n                    deleteItem={deleteItem}\n                    updateLikes={updateLikes}\n                    moveItem={moveItem}\n                    leftCategory=\"Action Items\"\n                    rightCategory=\"To Improve\"\n                  />\n                );\n            })}\n          </Board>\n          <Board\n            className=\"RetroCategory RetroCategory-2\"\n            category=\"To Improve\"\n            addItem={addItem}\n          >\n            {cards.map((card, index) => {\n              if (card.category === \"To Improve\")\n                return (\n                  <RetroCard\n                    key={`to-improve-item-${index}`}\n                    card={card}\n                    index={index}\n                    focus={focus}\n                    updateItem={updateItem}\n                    deleteItem={deleteItem}\n                    updateLikes={updateLikes}\n                    moveItem={moveItem}\n                    leftCategory=\"Went Well\"\n                    rightCategory=\"Action Items\"\n                  />\n                );\n            })}\n          </Board>\n          <Board\n            className=\"RetroCategory RetroCategory-3\"\n            category=\"Action Items\"\n            addItem={addItem}\n          >\n            {cards.map((card, index) => {\n              if (card.category === \"Action Items\")\n                return (\n                  <RetroCard\n                    key={`action-item-${index}`}\n                    card={card}\n                    index={index}\n                    focus={focus}\n                    updateItem={updateItem}\n                    deleteItem={deleteItem}\n                    updateLikes={updateLikes}\n                    moveItem={moveItem}\n                    leftCategory=\"To Improve\"\n                    rightCategory=\"Went Well\"\n                  />\n                );\n            })}\n          </Board>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}